// // Instru√ß√µes para entrega
//  # 2Ô∏è‚É£ Calculadora de partidas Rankeadas
// **O Que deve ser utilizado**

// - Vari√°veis
// - Operadores
// - La√ßos de repeti√ß√£o
// - Estruturas de decis√µes
// - Fun√ß√µes

// ## Objetivo:

// Crie uma fun√ß√£o que recebe como par√¢metro a quantidade de vit√≥rias e derrotas de um jogador,
// depois disso retorne o resultado para uma vari√°vel, o saldo de Rankeadas deve ser feito atrav√©s do calculo (vit√≥rias - derrotas)

// Se vit√≥rias for menor do que 10 = Ferro
// Se vit√≥rias for entre 11 e 20 = Bronze
// Se vit√≥rias for entre 21 e 50 = Prata
// Se vit√≥rias for entre 51 e 80 = Ouro
// Se vit√≥rias for entre 81 e 90 = Diamante
// Se vit√≥rias for entre 91 e 100= Lend√°rio
// Se vit√≥rias for maior ou igual a 101 = Imortal

// ## Sa√≠da

// Ao final deve se exibir uma mensagem:
// "O Her√≥i tem de saldo de **{saldoVitorias}** est√° no n√≠vel de **{nivel}**"
 

  
// Bons estudos üòâ

let wins = 120
function rank (win, lose){
   const winRate = win - lose;
   
   let nivel = ""; 

  switch (true) {
    case win < 10:
      nivel = "Ferro"; 
      break;
    case win >= 11 && win <= 20:
      nivel = "Bronze"; 
      break;
    case win >= 21 && win <= 50:
      nivel = "Prata"; 
      break;
    case win >= 51 && win <= 80:
      nivel = "Ouro"; 
      break;
    case win >= 81 && win <= 90:
      nivel = "Diamante";
      break;
    case win >= 91 && win <= 100:
      nivel = "Lend√°rio"; 
      break;
    case win >= 101:
      nivel = "Imortal";
      break;
  }

  
  console.log(`O Her√≥i tem saldo de ${winRate} e est√° no n√≠vel de ${nivel}`);
}


rank(121, 20);
